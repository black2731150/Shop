// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"account/internal/biz"
	"account/internal/conf"
	"account/internal/data"
	"account/internal/server"
	"account/internal/service"

	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp (config *conf.Bootstrap,logger log.Logger) (*kratos.App, func(), error) {
	dataData, cleanup, err := data.NewData(config.Data,logger)
	if err != nil {
		return nil, nil, err
	}
	AccountRepo := data.NewUserRepo(dataData, logger)
	AuthRepo:=data.NewAuthRepo(config,logger)
	AccountUsecase := biz.NewAccountUseCase(logger, config,AccountRepo,AuthRepo)
	AccountService := service.NewAccountUseCase(logger,AccountUsecase)
	grpcServer := server.NewGRPCServer(config.Server, AccountService, logger)
	httpServer := server.NewHTTPServer(config.Server, AccountService, logger)
	app := newApp(logger, grpcServer, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
